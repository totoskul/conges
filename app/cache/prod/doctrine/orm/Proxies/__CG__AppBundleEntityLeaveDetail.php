<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class LeaveDetail extends \AppBundle\Entity\LeaveDetail implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'startDate', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'endDate', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'leaveRequest', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'leaveType', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'leaveStartPeriod', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'leaveEndPeriod', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'dateProposal', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'dateResult', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'user', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'leaveStatus', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'nb_days', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'comment', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'commentUser');
        }

        return array('__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'startDate', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'endDate', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'leaveRequest', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'leaveType', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'leaveStartPeriod', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'leaveEndPeriod', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'dateProposal', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'dateResult', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'user', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'leaveStatus', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'nb_days', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'comment', '' . "\0" . 'AppBundle\\Entity\\LeaveDetail' . "\0" . 'commentUser');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (LeaveDetail $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartDate($startDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartDate', array($startDate));

        return parent::setStartDate($startDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartDate', array());

        return parent::getStartDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartPeriod($startPeriod)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartPeriod', array($startPeriod));

        return parent::setStartPeriod($startPeriod);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartPeriod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartPeriod', array());

        return parent::getStartPeriod();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndDate($endDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndDate', array($endDate));

        return parent::setEndDate($endDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndDate', array());

        return parent::getEndDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndPeriod($endPeriod)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndPeriod', array($endPeriod));

        return parent::setEndPeriod($endPeriod);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndPeriod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndPeriod', array());

        return parent::getEndPeriod();
    }

    /**
     * {@inheritDoc}
     */
    public function setLeaveRequest(\AppBundle\Entity\LeaveRequest $leaveRequest = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLeaveRequest', array($leaveRequest));

        return parent::setLeaveRequest($leaveRequest);
    }

    /**
     * {@inheritDoc}
     */
    public function getLeaveRequest()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLeaveRequest', array());

        return parent::getLeaveRequest();
    }

    /**
     * {@inheritDoc}
     */
    public function setLeaveType(\AppBundle\Entity\LeaveType $leaveType = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLeaveType', array($leaveType));

        return parent::setLeaveType($leaveType);
    }

    /**
     * {@inheritDoc}
     */
    public function getLeaveType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLeaveType', array());

        return parent::getLeaveType();
    }

    /**
     * {@inheritDoc}
     */
    public function setLeavePeriod(\AppBundle\Entity\LeavePeriod $leavePeriod = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLeavePeriod', array($leavePeriod));

        return parent::setLeavePeriod($leavePeriod);
    }

    /**
     * {@inheritDoc}
     */
    public function getLeavePeriod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLeavePeriod', array());

        return parent::getLeavePeriod();
    }

    /**
     * {@inheritDoc}
     */
    public function setLeaveStartPeriod(\AppBundle\Entity\LeavePeriod $leaveStartPeriod = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLeaveStartPeriod', array($leaveStartPeriod));

        return parent::setLeaveStartPeriod($leaveStartPeriod);
    }

    /**
     * {@inheritDoc}
     */
    public function getLeaveStartPeriod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLeaveStartPeriod', array());

        return parent::getLeaveStartPeriod();
    }

    /**
     * {@inheritDoc}
     */
    public function setLeaveEndPeriod(\AppBundle\Entity\LeavePeriod $leaveEndPeriod = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLeaveEndPeriod', array($leaveEndPeriod));

        return parent::setLeaveEndPeriod($leaveEndPeriod);
    }

    /**
     * {@inheritDoc}
     */
    public function getLeaveEndPeriod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLeaveEndPeriod', array());

        return parent::getLeaveEndPeriod();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateProposal($dateProposal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateProposal', array($dateProposal));

        return parent::setDateProposal($dateProposal);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateProposal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateProposal', array());

        return parent::getDateProposal();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateResult($dateResult)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateResult', array($dateResult));

        return parent::setDateResult($dateResult);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateResult()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateResult', array());

        return parent::getDateResult();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\AppBundle\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setLeaveStatus(\AppBundle\Entity\LeaveRequestStatus $leaveStatus = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLeaveStatus', array($leaveStatus));

        return parent::setLeaveStatus($leaveStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getLeaveStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLeaveStatus', array());

        return parent::getLeaveStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbDays($ndDays)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbDays', array($ndDays));

        return parent::setNbDays($ndDays);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbDays()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbDays', array());

        return parent::getNbDays();
    }

    /**
     * {@inheritDoc}
     */
    public function setComment($comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComment', array($comment));

        return parent::setComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getComment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComment', array());

        return parent::getComment();
    }

    /**
     * {@inheritDoc}
     */
    public function getFullStartDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFullStartDate', array());

        return parent::getFullStartDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getFullEndDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFullEndDate', array());

        return parent::getFullEndDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommentUser($commentUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommentUser', array($commentUser));

        return parent::setCommentUser($commentUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommentUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommentUser', array());

        return parent::getCommentUser();
    }

}
